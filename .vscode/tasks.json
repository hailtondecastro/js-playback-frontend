{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "bash",
    //"command": "type",
    "isShellCommand": true,
    "showOutput": "always",
    "suppressTaskName": true,
    "echoCommand": true,
    "args": [
        "-c"
    ],
    "tasks": [
        {
            "taskName": "build",
            "args": [
                //"build.out.txt"
                "npm run build"
            ],
            "isBuildCommand": true,
            "problemMatcher": [
                "$tsc",
                "$tsc-watch",
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}/node_modules"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^.*ERROR.*/~/(.*)$",
                            "file": 1
                        }
                        ,{
                            "regexp": "^(.*Error:.*)$",
                            "message": 1,
                            "line": 1,
                            "column": 1,
                            "loop": true
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^ERROR in .*(..src.client.*)$",
                            "file": 1
                        },
                        {
                            "regexp": "^(.*Error:.*)$",
                            "line": 1,
                            "message": 1,
                            "loop": true
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^ERROR in .at-loader. (.*):(\\d+):(\\d+)\\s*$",
                            "file": 1,
                            "line": 2,
                            "column": 3
                        },
                        {
                            "regexp": "^.*(TS\\d+:.*)$",
                            "message": 1,
                            "loop": true
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^Error in bail mode:[^\\]]*\\] (.*\\.ts):(\\d*):(\\d*) *$",
                            "file": 1,
                            "line": 2,
                            "column": 3
                        },
                        {
                            "regexp": "^ *(TS.*)$",
                            "message": 1,
                            "loop": true
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": "absolute",
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^Error:.(.*)$",
                            "message": 1
                            //"file": 1, 
                            //"line": 1
                        }
                        ,
                        {
                            "regexp": "^.*at main \\((..[^:]*):(\\d+):(\\d+)\\)$", 
                            //"message": 1,
                            "file": 1,
                            "line": 2, 
                            "column": 3,
                            "loop": true
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^.*frontend/(.*\\.js):(\\d*)$",
                            "message": 1,
                            "file": 1,
                            "line": 2
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "error",
                    "pattern": [
                        {
                            "regexp": "^.*foo(Module not found: Error: Can't resolve '[^']*' in '([^'])*'.*)$",
                            "message": 1,
                            "file": 2,
                            "line": 2
                        }
                    ]
                },
                {
                    "owner": "build",
                    "fileLocation": [
                        "relative",
                        "${workspaceRoot}"
                    ],
                    "severity": "warning",
                    "pattern": [
                        {
                            "regexp": "^WARNING in \\./(.*\\.ts)$",
                            "file": 1
                        },
                        {
                            "regexp": "^.*\\[(\\d*), (\\d+)\\]: (.*)$",
                            "message": 3,
                            "line": 1,
                            "column": 2,
                            "loop": true
                        }
                    ]
                }
            ]
        }
    ]
}